/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package bioapp;

//import genelib.Correlation;
import genelib.ATskew;
import genelib.Correlationmultithreaded;
import genelib.Readfile;
import java.awt.Color;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author jnu
 */
public class Correlationform extends javax.swing.JFrame {

    /**
     * Creates new form Correlationform
     */
    String tocall;
    ImageIcon img = new ImageIcon(getClass().getClassLoader().getResource("images/icons/orislogo.png"));
    int maxwinsize = Form2.sequencelength;
    //boolean flag to check the length of sequence to be passed on
    boolean len_flag = false;

    public Correlationform(String str) {
        initComponents();
        this.setIconImage(img.getImage());
        jTextFieldwinsize.setText(Form2.DEFAULT_WIN_SIZE);
        jTextFieldincreament.setText(Form2.DEFAULT_INCREAMENT);
        this.setTitle("Select Parameters for Correlation Method");
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        jRadioButtondefault.setSelected(true);
        jTextFieldkval.setEditable(false);
        jTextFieldkval.setBackground(Color.LIGHT_GRAY);
        jTextFieldfilename.setEditable(false);
        jTextFieldfilename.setBackground(Color.lightGray);
        tocall = str;
        wholegenomecheck.setSelected(true);
        startpos.setEditable(false);
        endpos.setEditable(false);
        startpos.setBackground(Color.LIGHT_GRAY);
        endpos.setBackground(Color.LIGHT_GRAY);
        len_flag = false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        jLabelwinsize = new javax.swing.JLabel();
        jLabelincreament = new javax.swing.JLabel();
        jTextFieldwinsize = new javax.swing.JTextField();
        jTextFieldincreament = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jTextFieldkval = new javax.swing.JTextField();
        jLabelkval = new javax.swing.JLabel();
        jRadioButtonparticular = new javax.swing.JRadioButton();
        jRadioButtonkmax = new javax.swing.JRadioButton();
        jRadioButtondefault = new javax.swing.JRadioButton();
        jCheckBoxsave = new javax.swing.JCheckBox();
        jLabelfilename = new javax.swing.JLabel();
        jTextFieldfilename = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        wholegenomecheck = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        startpos = new javax.swing.JTextField();
        endpos = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabelwinsize.setText("Window Size");

        jLabelincreament.setText("Increament");

        jTextFieldwinsize.setText("50000");

        jTextFieldincreament.setText("10000");

        jButton1.setText("Go");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextFieldkval.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldkvalActionPerformed(evt);
            }
        });

        jLabelkval.setText("Enter k value:");

        jRadioButtonparticular.setText("For a particular k");
        jRadioButtonparticular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonparticularActionPerformed(evt);
            }
        });

        jRadioButtonkmax.setText("Till a particular k");
        jRadioButtonkmax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonkmaxActionPerformed(evt);
            }
        });

        jRadioButtondefault.setText("Default(k till windowsize)");
        jRadioButtondefault.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtondefaultActionPerformed(evt);
            }
        });

        jCheckBoxsave.setText("Save data in text file");
        jCheckBoxsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxsaveActionPerformed(evt);
            }
        });

        jLabelfilename.setText("Enter file name:");

        wholegenomecheck.setText("Use Whole Genome");
        wholegenomecheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wholegenomecheckActionPerformed(evt);
            }
        });

        jLabel1.setText("Start");

        jLabel2.setText("End");

        jLabel5.setText("*Position index starts from 1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelincreament, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelwinsize))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 169, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldwinsize, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                    .addComponent(jTextFieldincreament))
                .addGap(64, 64, 64))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jRadioButtondefault)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButtonparticular, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButtonkmax, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelkval)
                    .addComponent(jLabelfilename, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBoxsave)
                    .addComponent(jTextFieldkval, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldfilename, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(67, 67, 67))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(startpos, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(110, 110, 110)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(wholegenomecheck, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(endpos, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(74, 74, 74)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(248, 248, 248))
            .addGroup(layout.createSequentialGroup()
                .addGap(184, 184, 184)
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelwinsize, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldwinsize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelincreament, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldincreament, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButtondefault)
                    .addComponent(jRadioButtonparticular, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jRadioButtonkmax, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldkval, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelkval, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jCheckBoxsave)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldfilename, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelfilename, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addComponent(wholegenomecheck)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(startpos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(endpos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(26, 26, 26)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButtonparticularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonparticularActionPerformed
        // TODO add your handling code here:

        jRadioButtonkmax.setSelected(false);
        jRadioButtondefault.setSelected(false);
        jTextFieldkval.setEditable(true);
        jTextFieldkval.setBackground(Color.white);
    }//GEN-LAST:event_jRadioButtonparticularActionPerformed

    private void jRadioButtonkmaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonkmaxActionPerformed
        // TODO add your handling code here:
        jRadioButtonparticular.setSelected(false);
        jRadioButtondefault.setSelected(false);
        jTextFieldkval.setEditable(true);
        jTextFieldkval.setBackground(Color.white);
    }//GEN-LAST:event_jRadioButtonkmaxActionPerformed

    private void jTextFieldkvalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldkvalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldkvalActionPerformed

    private void jRadioButtondefaultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtondefaultActionPerformed
        // TODO add your handling code here:
        jRadioButtonparticular.setSelected(false);
        jRadioButtonkmax.setSelected(false);
        jTextFieldkval.setEditable(false);
        jTextFieldkval.setBackground(Color.lightGray);
    }//GEN-LAST:event_jRadioButtondefaultActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int winsize, inc, kval = 0, flag = 0;
        int errorflag = 0;  //0 means no error in values 1 means some invalid values
        int saveflag = 0;
        String fname = null;
        winsize = Integer.parseInt(jTextFieldwinsize.getText());
        inc = Integer.parseInt(jTextFieldincreament.getText());

        //check for invalid values for winsize and increment
        if (winsize <= 0 || inc <= 0 && errorflag == 0) {
            JOptionPane.showMessageDialog(null, "Value can not be 0 or negative");
            errorflag = 1;
        } else {
            errorflag = 0;
        }

        if (jRadioButtondefault.isSelected()) {

            kval = winsize - 1;
            flag = 0;
        } else if (jRadioButtonparticular.isSelected()) {

            if (jTextFieldkval.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Please enter a k value");
                errorflag = 1;
            } else {
                kval = Integer.parseInt(jTextFieldkval.getText());
            }

            if (kval > winsize - 1) {
                JOptionPane.showMessageDialog(null, "k cannot exceed winsize-1");
                errorflag = 1;
            }

            if (errorflag == 0) {
                kval = Integer.parseInt(jTextFieldkval.getText());
                if (kval <= 0) {
                    JOptionPane.showMessageDialog(null, "Please enter k more than 0");
                    errorflag = 1;
                }
                flag = 1;
            }
        } else if (jRadioButtonkmax.isSelected()) {

            if (jTextFieldkval.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Please enter a k value");
                errorflag = 1;
            } else {
                kval = Integer.parseInt(jTextFieldkval.getText());
            }

            if (kval > winsize - 1) {
                JOptionPane.showMessageDialog(null, "k cannot exceed winsize-1");
                errorflag = 1;
            }

            if (errorflag == 0) {

                if (kval <= 0) {
                    JOptionPane.showMessageDialog(null, "Please enter k more than 0");
                    errorflag = 1;
                }
                flag = 0;
            }
        }

        if (jCheckBoxsave.isSelected()) {
            saveflag = 1;

        }
        //check for a valid file name
        if (saveflag == 1) {
            fname = jTextFieldfilename.getText();
            if (fname == null || fname.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Enter a valid file name");
                errorflag = 1;

            } else {
                //add save dir before file mane
                fname = Form2.DEFAULT_SAVE_DIR + fname;
                errorflag = 0;

            }
        }

        Readfile ob = new Readfile();
        if (winsize >= Integer.parseInt(ob.returnglength())) {
            JOptionPane.showMessageDialog(null, " winsize cannot be equal or exceed the total length(" + String.valueOf(Form2.sequencelength) + ")");
            errorflag = 1;

        }

        if (errorflag == 0) {

            if (ob.returnseq() == null) {
                JOptionPane.showMessageDialog(null, " Fatal Error no file read...");
                this.dispose();
                return;
            }

            if ("corr".equals(tocall)) {

                //code for extracting part of  seq. 
                //boolean var to check the user defined length of genome, if not whole genome
                boolean falseval = false;
                char[] seqtopass = null;
                seqtopass = ob.returnseq();
                //if wholegenome is selected
                if (len_flag == false) {
                    Correlationcoefficient ob2 = new Correlationcoefficient(ob.returnseq(), winsize, inc, kval, flag, saveflag, fname);

                    ob2.setVisible(true);
                }

                //if start and end pos are specified
                if (len_flag == true) {

                    int start = 0, end = 0;
                    //get value for start and end
                    try {
                        start = Integer.parseInt(startpos.getText());
                        end = Integer.parseInt(endpos.getText());
                        //position starts from 1 so do --
                        start--;
                        end--;

                    } catch (NumberFormatException x) {
                        falseval = true;
                        System.out.println("Error : " + x.getMessage());
                        x.printStackTrace();
                    }

                    //check for values of start and end
                    if (start >= end || start < 0 || end < 0 || end > seqtopass.length || start > seqtopass.length) {
                        falseval = true;
                    } else {
                        falseval = false;
                        System.out.println("VAL good");
                    }

                    if (falseval == false) {
                        int j = 0;
                        //System.out.println("Start="+start+"  End="+end);
                        char[] tempseq = new char[end - start + 1];
                        for (int i = start; i <= end; i++) {
                            //    System.out.println(i);
                            tempseq[j++] = seqtopass[i];
                        }

                        Correlationcoefficient ob2 = new Correlationcoefficient(tempseq, winsize, inc, kval, flag, saveflag, fname);
                        ob2.setVisible(true);
                    } else if (falseval == true) {
                        JOptionPane.showMessageDialog(null, "Please check start and/or End values");
                    }

                }

            } else if ("crosscorr".equals(tocall)) {

                //code for extracting part of  seq. 
                //boolean var to check the user defined length of genome, if not whole genome
                boolean falseval = false;
                char[] seqtopass = null;
                seqtopass = ob.returnseq();
                //if wholegenome is selected
                if (len_flag == false) {
                    Crosscorelationform ob2 = new Crosscorelationform(ob.returnseq(), winsize, inc, kval, flag, saveflag, fname);
                    ob2.setVisible(true);
                }

                //if start and end pos are specified
                if (len_flag == true) {

                    int start = 0, end = 0;
                    //get value for start and end
                    try {
                        start = Integer.parseInt(startpos.getText());
                        end = Integer.parseInt(endpos.getText());
                        //position starts from 1 so do --
                        start--;
                        end--;

                    } catch (NumberFormatException x) {
                        falseval = true;
                        System.out.println("Error : " + x.getMessage());
                        x.printStackTrace();
                    }

                    //check for values of start and end
                    if (start >= end || start < 0 || end < 0 || end > seqtopass.length || start > seqtopass.length) {
                        falseval = true;
                    } else {
                        falseval = false;
                        System.out.println("VAL good");
                    }

                    if (falseval == false) {
                        int j = 0;
                        //System.out.println("Start="+start+"  End="+end);
                        char[] tempseq = new char[end - start + 1];
                        for (int i = start; i <= end; i++) {
                            //    System.out.println(i);
                            tempseq[j++] = seqtopass[i];
                        }

                        Crosscorelationform ob2 = new Crosscorelationform(tempseq, winsize, inc, kval, flag, saveflag, fname);

                        ob2.setVisible(true);
                    } else if (falseval == true) {
                        JOptionPane.showMessageDialog(null, "Please check start and/or End values");
                    }

                }

            }

            //this.dispose();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jCheckBoxsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxsaveActionPerformed
        // TODO add your handling code here:
        if (jCheckBoxsave.isSelected()) {
            jTextFieldfilename.setEditable(true);
            jTextFieldfilename.setBackground(Color.white);
        } else {
            jTextFieldfilename.setEditable(false);
            jTextFieldfilename.setBackground(Color.lightGray);
        }
    }//GEN-LAST:event_jCheckBoxsaveActionPerformed

    private void wholegenomecheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wholegenomecheckActionPerformed
        // TODO add your handling code here:
        if (!(wholegenomecheck.isSelected())) {
            startpos.setEditable(true);
            endpos.setEditable(true);
            startpos.setBackground(Color.WHITE);
            endpos.setBackground(Color.WHITE);
            len_flag = true;
        } else {

            startpos.setEditable(false);
            endpos.setEditable(false);
            startpos.setBackground(Color.LIGHT_GRAY);
            endpos.setBackground(Color.LIGHT_GRAY);
            len_flag = false;
        }
    }//GEN-LAST:event_wholegenomecheckActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Correlationform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Correlationform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Correlationform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Correlationform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
//                new Correlationform().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.JTextField endpos;
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBoxsave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabelfilename;
    private javax.swing.JLabel jLabelincreament;
    private javax.swing.JLabel jLabelkval;
    private javax.swing.JLabel jLabelwinsize;
    private javax.swing.JRadioButton jRadioButtondefault;
    private javax.swing.JRadioButton jRadioButtonkmax;
    private javax.swing.JRadioButton jRadioButtonparticular;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextFieldfilename;
    private javax.swing.JTextField jTextFieldincreament;
    private javax.swing.JTextField jTextFieldkval;
    private javax.swing.JTextField jTextFieldwinsize;
    private javax.swing.JTextField startpos;
    private javax.swing.JCheckBox wholegenomecheck;
    // End of variables declaration//GEN-END:variables
}
