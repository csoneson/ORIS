/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package bioapp;

import javax.swing.ImageIcon;

/**
 *
 * @author jnu
 */
public class UserGuide extends javax.swing.JFrame {
ImageIcon img = new ImageIcon("images/icons/orislogo.png");
    /**
     * Creates new form UserGuide
     */
    public UserGuide() {
        initComponents();
        jTextAreahelp.setEditable(false);
        this.setTitle("Oris User Guide");
        this.setIconImage(img.getImage());
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        this.setResizable(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreahelp = new javax.swing.JTextArea();
        jLabelskew = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabelcorr = new javax.swing.JLabel();
        jLabelsearch = new javax.swing.JLabel();
        jLabelbending = new javax.swing.JLabel();
        jLabelentropy = new javax.swing.JLabel();
        jLabelcomposition = new javax.swing.JLabel();
        jLabelwtmatrix = new javax.swing.JLabel();
        jLabelextractseq = new javax.swing.JLabel();
        jLabelsettings = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextAreahelp.setColumns(20);
        jTextAreahelp.setRows(5);
        jTextAreahelp.setText("                                                           ORIS (ver 1.0) USER GUIDE\n\nClick On topics on left to get related help.");
        jScrollPane2.setViewportView(jTextAreahelp);

        jLabelskew.setText("2. Skew Methods");
        jLabelskew.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelskewMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelskewMouseEntered(evt);
            }
        });

        jLabel4.setText("Index");
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });

        jLabelcorr.setText("3. Correlation ");
        jLabelcorr.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelcorrMouseClicked(evt);
            }
        });

        jLabelsearch.setText("4. Pattern Search");
        jLabelsearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelsearchMouseClicked(evt);
            }
        });

        jLabelbending.setText("7. Bending Analysis");
        jLabelbending.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelbendingMouseClicked(evt);
            }
        });

        jLabelentropy.setText("8. Entropy");
        jLabelentropy.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelentropyMouseClicked(evt);
            }
        });

        jLabelcomposition.setText("9. Composition");
        jLabelcomposition.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelcompositionMouseClicked(evt);
            }
        });

        jLabelwtmatrix.setText("5. Weight Matrix");
        jLabelwtmatrix.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelwtmatrixMouseClicked(evt);
            }
        });

        jLabelextractseq.setText("6. Extract Sequence");
        jLabelextractseq.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelextractseqMouseClicked(evt);
            }
        });

        jLabelsettings.setText("10. Settings");
        jLabelsettings.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelsettingsMouseClicked(evt);
            }
        });

        jLabel1.setText("1. Windowing system");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelsearch)
                    .addComponent(jLabelcorr)
                    .addComponent(jLabelskew)
                    .addComponent(jLabelsettings)
                    .addComponent(jLabel1)
                    .addComponent(jLabelwtmatrix)
                    .addComponent(jLabelcomposition)
                    .addComponent(jLabelentropy)
                    .addComponent(jLabelbending)
                    .addComponent(jLabelextractseq)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(89, 89, 89)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 657, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(33, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jLabel4)
                        .addGap(43, 43, 43)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelskew)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelcorr)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelsearch)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelwtmatrix)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelextractseq)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelbending)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelentropy)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelcomposition)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelsettings))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabelskewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelskewMouseClicked
        // TODO add your handling code here
        jTextAreahelp.setText("Skew methods are helpful for finding assymtery in nucleotide composition.\nTo compute skew, after reading file:\n1. Click origin finder\n2. Choose skew methods\n3. Choose appropriate Skew method i.e. GC Skew, AT Skew or cumulative skews.");
    }//GEN-LAST:event_jLabelskewMouseClicked

    private void jLabelskewMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelskewMouseEntered
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jLabelskewMouseEntered

    private void jLabelcorrMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelcorrMouseClicked
        // TODO add your handling code here:
        jTextAreahelp.setText("Correlation methods computes auto correlation measure in the sequence for a given nucleotide.\nTo find correlation among different nucleotides use cross-correlation method.\nTo compute correlation, after reading file:\n1. Click origin finder\n2. Choose Correlation \n3. Choose appropriate Correlation method i.e. by window, Cross-correlation \nor Whole Genome Correlation.");
    }//GEN-LAST:event_jLabelcorrMouseClicked

    private void jLabelsearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelsearchMouseClicked
        // TODO add your handling code here:
        jTextAreahelp.setText("Pattern search is helpful for finding motifs or regions of intereset in a given sequence.\nTo find a pattern, after reading file:\n1. Click pattern search\n2. Choose a type of search\n3. Choose appropriate parameters for search.\n\n\n Parameters for pattern search:\na. Reverse Complement: Check this option to also search the reverse complement sequnce.\nb. Sequence logo: Check this option to generate a sequence logo based on search results.\nc. Search Statics: Check this option if you want to view graphically, where the matches have been \nfound in the sequnce.\nd. Save results: Check this option to save search results into a .txt file\ne. Tolerance: select a tolerance value. This will allow mismatches, e.g. search with tolerance \nvalue=1 will allow 1 mismatch.");
    }//GEN-LAST:event_jLabelsearchMouseClicked

    private void jLabelwtmatrixMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelwtmatrixMouseClicked
        // TODO add your handling code here:
         jTextAreahelp.setText("Users can read a non-gaped seq-alignment file to create a weight matrix or can create a weight matrix \non their own.\nThen one can enter a Sequnce in which search is performed and results are stored in a .txt file \nspecified by the user.\nTo perform weight matrix search:\n1. Click Search\n2. Choose Weight-Matrix search\n3. Read non-gaped alignment file or create a weight matrix\n4. Enter a Sequnce to perform search and select a threshold value to indicate significant matches.");
    }//GEN-LAST:event_jLabelwtmatrixMouseClicked

    private void jLabelextractseqMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelextractseqMouseClicked
        // TODO add your handling code here:
         jTextAreahelp.setText("Extract Sequnce simply extracts sequence from one given start position till an end position and saves \nit in a .txt file.\nTo Extract Sequence, after reading file:\n1. Click Search\n2. Choose Extract Sequence\n3. Input start and ending positions (positions starting from 1).");
    }//GEN-LAST:event_jLabelextractseqMouseClicked

    private void jLabelbendingMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelbendingMouseClicked
        // TODO add your handling code here:
         jTextAreahelp.setText("Bending analysis is for analysing bending propensity of trimers in regions of interest like oriC.\nTo compute Bending Analysis, after reading file:\n1. Click DNA analysis\n2. Choose DNA bending analysis\n3. Choose appropriate region of interest by giving position in the sequence.");
    }//GEN-LAST:event_jLabelbendingMouseClicked

    private void jLabelentropyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelentropyMouseClicked
        // TODO add your handling code here:
         jTextAreahelp.setText("Entropy is used to find the information content of the sequnce. Oris includes Shannons, Renyi \nand Binary entropy methods.\nTo compute entropy, after reading file:\n1. Click Information\n2. Choose appropriate entropy method");
    }//GEN-LAST:event_jLabelentropyMouseClicked

    private void jLabelcompositionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelcompositionMouseClicked
        // TODO add your handling code here:
         jTextAreahelp.setText("Viewing sequence Composition helpful for basic knowledge about the read sequence.\nTo compute Composition, after reading file:\n1. Click Composition\n2. Choose appropriate nucleotide to view its composition variation in sequence");
    }//GEN-LAST:event_jLabelcompositionMouseClicked

    private void jLabelsettingsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelsettingsMouseClicked
        // TODO add your handling code here:
         jTextAreahelp.setText("User can modify some settings of ORIS according his/her requirments.\n Settings menu include:\n1. Default Window size: It is the default window size used in windowing analysis system.\n2. Default Increament size: It is the default increment size used in windowing analysis system.");
         jTextAreahelp.append("\n3. Default Save Directory: It is the default directory in which ORIS will save result files");
         jTextAreahelp.append("\n4. Default Open Directory: It is the default directory from which ORIS will open sequence files");
         jTextAreahelp.append("\n5. Priority: It is ORIS running priority. L is Low, M is Medium, H is High. The Higher the priority more cpu \ncores ORIS will utilize.");
         jTextAreahelp.append("\n\n\t****All these Settings are saved in ORIS directory in a file, \"settings.cfg\"****");
         jTextAreahelp.append("\n\n\t****If \"settings.cfg\" is deleted ORIS creates a new copy of it.****");
    }//GEN-LAST:event_jLabelsettingsMouseClicked

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        // TODO add your handling code here:
        jTextAreahelp.setText("Most methods in ORIS use a sliding window method to compute results. \nTo do this a window of some size is chosen and an increment is defined. Then computations are \ndone on the sequence under the window. The window is then slid with an increment value and \nprocedure is repeated.\n\nSliding window is used as sequnces are very large and doing computation on whole sequence will be \nvery slow" );
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        // TODO add your handling code here:
        jTextAreahelp.setText("                                                           ORIS (ver 1.0) USER GUIDE\n" +
"\n" +
"Click On topics on left to get related help.");
    }//GEN-LAST:event_jLabel4MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserGuide.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserGuide.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserGuide.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserGuide.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserGuide().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelbending;
    private javax.swing.JLabel jLabelcomposition;
    private javax.swing.JLabel jLabelcorr;
    private javax.swing.JLabel jLabelentropy;
    private javax.swing.JLabel jLabelextractseq;
    private javax.swing.JLabel jLabelsearch;
    private javax.swing.JLabel jLabelsettings;
    private javax.swing.JLabel jLabelskew;
    private javax.swing.JLabel jLabelwtmatrix;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextAreahelp;
    // End of variables declaration//GEN-END:variables
}
